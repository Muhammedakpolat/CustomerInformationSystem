@model CustomerViewModel

@{
    ViewData["Title"] = "Customers";
}

<h2>Customers</h2>

<p>
    <button type="button" class="btn btn-link" data-toggle="modal" data-target="#addNewCustomerModal">Add New Customer</button>
</p>

<table class="table">

    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Customer.Name)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Customer.Surname)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Customer.Email)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Customer.IdentityNumber)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Customer.Gender)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Customer.Occupation)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Customer.IsExtraordinaryName)
            </th>
            <th></th>
        </tr>
    </thead>

    <tbody>
        @foreach (var customer in Model.Customers)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => customer.Name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => customer.Surname)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => customer.Email)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => customer.IdentityNumber)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => customer.Gender)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => customer.Occupation)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => customer.IsExtraordinaryName)
                </td>
                <td>
                    @Html.ActionLink("Edit", "Edit", new { customer.Id }) |
                    @Html.ActionLink("Delete", "Delete", new { customer.Id })
                </td>
            </tr>
        }
    </tbody>

</table>

<div class="modal fade" id="addNewCustomerModal" tabindex="-1" role="dialog" aria-labelledby="addNewCustomerModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="addNewCustomerModalLabel">Add New Customer</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <form id="AddNewCustomerForm">
                    <div class="form-group">
                        <label for="customerName" class="col-form-label">Name:</label>
                        <input type="text" class="form-control" id="customerName" asp-for="Customer.Name">
                    </div>
                    <div class="form-group">
                        <label for="customerSurname" class="col-form-label">Surname:</label>
                        <input type="text" class="form-control" id="customerSurname" asp-for="Customer.Surname">
                    </div>
                    <div class="form-group">
                        <label for="customerEmail" class="col-form-label">Email:</label>
                        <input type="text" class="form-control" id="customerEmail" asp-for="Customer.Email">
                    </div>
                    <div class="form-group">
                        <label for="customerIdentityNumber" class="col-form-label">Identity Number:</label>
                        <input type="text" class="form-control" id="customerIdentityNumber" asp-for="Customer.IdentityNumber">
                    </div>
                    <div class="form-group">
                        <label for="customerGender" class="col-form-label">Gender:</label>
                        <input type="text" class="form-control" id="customerGender" asp-for="Customer.Gender">
                    </div>
                    <div class="form-group">
                        <label for="customerOcuppation" class="col-form-label">Ocuppation:</label>
                        <input type="text" class="form-control" id="customerOcuppation" asp-for="Customer.Occupation">
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                <button type="button" class="btn btn-light" onclick="AddNewCustomer()">Add Customer</button>
            </div>
        </div>
    </div>
</div>

<script>

    $(document).ready(function () {

    })

    function AddNewCustomer() {
        Swal.fire({
                icon: 'question',
                title: 'Confirm',
                html: 'Are you sure you want to add new customer?',
                showCancelButton: true,
                reverseButtons: true,
                cancelButtonText: 'Cancel',
                confirmButtonText: 'Add'
            }).then((result) => {
                if (result.isConfirmed) {
                    let formElem = $("#AddNewCustomerForm");
                    let postableData = $(formElem).serialize();
                    var token = $('input[name="__RequestVerificationToken"]', formElem).val();

                    $.ajax({
                        url: "@Url.Action("AddCustomer", "Home")",
                        data: postableData,
                        headers: {
                            'RequestVerificationToken': token
                        },
                        type: "post",
                        contentType: "application/x-www-form-urlencoded",
                        success: function (response) {
                            Swal.fire({
                                icon: 'success',
                                title: 'Success',
                                html: 'Customer added successfully!',
                                showConfirmButton: true
                            });
                        },
                        error: function (response) {
                            Swal.fire({
                                icon: 'error',
                                title: 'Error',
                                html: 'An error occured while adding customer!',
                                showConfirmButton: true
                            });
                        }
                    });
                }
            });
    }

</script>